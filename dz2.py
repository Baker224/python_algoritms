"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def sum_even_odd(num, even=0, odd=0):
    if num == 0:
        return even, odd
    else:
        rem = num % 10
        if rem % 2 == 0:
            even += 1
        else:
            odd += 1
        num = num // 10
        return sum_even_odd(num, even, odd)


try:
    numb = int(input('Введите число: '))
    print('Количество четных и нечетных цифр в числе равно: ', sum_even_odd(numb))
except ValueError:
    print('Вы вместо числа ввели строку. Исправьте')
