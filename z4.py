"""
Задание 4.
Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

users_dict = {
    'user1': {'password1': 'active'},
    'user2': {'password2': 'non_active'},
    'user3': {'password3': 'active'}
}


def user_auth(x):                    #O(N)
    y = users_dict.get(x)
    for key in y.values():
        if key == 'active':
            print('Вы допущены к ресурсу')
        elif key == 'non_active':
            print('Вам необходимо пройти активацию. Хотите пройти активацию?')
        else:
            print('Данный логин не зарегистрирован в системе. Хотите зарегистрироваться?')
    return


def user_auth_2(x):                    #O(N)
    y = users_dict.get(x)
    if y is not None:
        z = y.values()
        if str(z).find('non_active') != -1:
            print('Вам необходимо пройти активацию. Хотите пройти активацию?')
        else:
            print('Вы допущены к ресурсу')
    else:
        print('Данный логин не зарегистрирован в системе. Хотите зарегистрироваться?')


user_auth('user2')

user_auth_2('user4')



